// automatically generated by the FlatBuffers compiler, do not modify

import  flatbuffers  from "flatbuffers"
/**
 * @enum {number}
 */
export namespace schema{
export enum MessageBody{
  NONE= 0,
  Task= 1,
  GetResult= 2,
  GetHardwarePool= 3,
  File= 4
}};

/**
 * @constructor
 */
export namespace schema{
export class Message {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Message
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Message {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Message= obj
 * @returns Message
 */
static getRootAsMessage(bb:flatbuffers.ByteBuffer, obj?:Message):Message {
  return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns schema.MessageBody
 */
bodyType():schema.MessageBody {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : schema.MessageBody.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
body<T extends flatbuffers.Table>(obj:T|flatbuffers.Table):T|null|flatbuffers.Table {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param schema.MessageBody bodyType
 */
static addBodyType(builder:flatbuffers.Builder, bodyType:schema.MessageBody) {
  builder.addFieldInt8(1, bodyType, schema.MessageBody.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset bodyOffset
 */
static addBody(builder:flatbuffers.Builder, bodyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, bodyOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static createMessage(builder:flatbuffers.Builder, type:number, bodyType:schema.MessageBody, bodyOffset:flatbuffers.Offset):flatbuffers.Offset {
  Message.startMessage(builder);
  Message.addType(builder, type);
  Message.addBodyType(builder, bodyType);
  Message.addBody(builder, bodyOffset);
  return Message.endMessage(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class Stage {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Stage
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Stage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Stage= obj
 * @returns Stage
 */
static getRootAsStage(bb:flatbuffers.ByteBuffer, obj?:Stage):Stage {
  return (obj || new Stage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Int8Array
 */
dataArray():Int8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array
 */
cmdList(index: number):string
cmdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
cmdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns number
 */
cmdListLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns boolean
 */
trackTime():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
};

/**
 * @returns boolean
 */
trackRam():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns boolean
 */
trackCpu():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns boolean
 */
trackGpu():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
comment():string|null
comment(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
comment(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startStage(builder:flatbuffers.Builder) {
  builder.startObject(8);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset cmdListOffset
 */
static addCmdList(builder:flatbuffers.Builder, cmdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, cmdListOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createCmdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCmdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean trackTime
 */
static addTrackTime(builder:flatbuffers.Builder, trackTime:boolean) {
  builder.addFieldInt8(3, +trackTime, +true);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean trackRam
 */
static addTrackRam(builder:flatbuffers.Builder, trackRam:boolean) {
  builder.addFieldInt8(4, +trackRam, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean trackCpu
 */
static addTrackCpu(builder:flatbuffers.Builder, trackCpu:boolean) {
  builder.addFieldInt8(5, +trackCpu, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean trackGpu
 */
static addTrackGpu(builder:flatbuffers.Builder, trackGpu:boolean) {
  builder.addFieldInt8(6, +trackGpu, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset commentOffset
 */
static addComment(builder:flatbuffers.Builder, commentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, commentOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createStage(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, dataOffset:flatbuffers.Offset, cmdListOffset:flatbuffers.Offset, trackTime:boolean, trackRam:boolean, trackCpu:boolean, trackGpu:boolean, commentOffset:flatbuffers.Offset):flatbuffers.Offset {
  Stage.startStage(builder);
  Stage.addName(builder, nameOffset);
  Stage.addData(builder, dataOffset);
  Stage.addCmdList(builder, cmdListOffset);
  Stage.addTrackTime(builder, trackTime);
  Stage.addTrackRam(builder, trackRam);
  Stage.addTrackCpu(builder, trackCpu);
  Stage.addTrackGpu(builder, trackGpu);
  Stage.addComment(builder, commentOffset);
  return Stage.endStage(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class Task {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Task
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Task {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Task= obj
 * @returns Task
 */
static getRootAsTask(bb:flatbuffers.ByteBuffer, obj?:Task):Task {
  return (obj || new Task).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param schema.Hardware= obj
 * @returns schema.Hardware|null
 */
hardware(obj?:schema.Hardware):schema.Hardware|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new schema.Hardware).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param schema.Stage= obj
 * @returns schema.Stage
 */
stages(index: number, obj?:schema.Stage):schema.Stage|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new schema.Stage).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
stagesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array
 */
artifacts(index: number):string
artifacts(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
artifacts(index: number,optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns number
 */
artifactsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startTask(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset hardwareOffset
 */
static addHardware(builder:flatbuffers.Builder, hardwareOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, hardwareOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset stagesOffset
 */
static addStages(builder:flatbuffers.Builder, stagesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stagesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createStagesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startStagesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset artifactsOffset
 */
static addArtifacts(builder:flatbuffers.Builder, artifactsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, artifactsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createArtifactsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startArtifactsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endTask(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createTask(builder:flatbuffers.Builder, hardwareOffset:flatbuffers.Offset, stagesOffset:flatbuffers.Offset, artifactsOffset:flatbuffers.Offset):flatbuffers.Offset {
  Task.startTask(builder);
  Task.addHardware(builder, hardwareOffset);
  Task.addStages(builder, stagesOffset);
  Task.addArtifacts(builder, artifactsOffset);
  return Task.endTask(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class GetResult {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns GetResult
 */
__init(i:number, bb:flatbuffers.ByteBuffer):GetResult {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param GetResult= obj
 * @returns GetResult
 */
static getRootAsGetResult(bb:flatbuffers.ByteBuffer, obj?:GetResult):GetResult {
  return (obj || new GetResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array
 */
idList(index: number):string
idList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
idList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns number
 */
idListLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startGetResult(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset idListOffset
 */
static addIdList(builder:flatbuffers.Builder, idListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idListOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endGetResult(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createGetResult(builder:flatbuffers.Builder, idListOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetResult.startGetResult(builder);
  GetResult.addIdList(builder, idListOffset);
  return GetResult.endGetResult(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class GetHardwarePool {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns GetHardwarePool
 */
__init(i:number, bb:flatbuffers.ByteBuffer):GetHardwarePool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param GetHardwarePool= obj
 * @returns GetHardwarePool
 */
static getRootAsGetHardwarePool(bb:flatbuffers.ByteBuffer, obj?:GetHardwarePool):GetHardwarePool {
  return (obj || new GetHardwarePool).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array
 */
hardware(index: number):string
hardware(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
hardware(index: number,optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns number
 */
hardwareLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startGetHardwarePool(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset hardwareOffset
 */
static addHardware(builder:flatbuffers.Builder, hardwareOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, hardwareOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createHardwareVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startHardwareVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endGetHardwarePool(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createGetHardwarePool(builder:flatbuffers.Builder, hardwareOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetHardwarePool.startGetHardwarePool(builder);
  GetHardwarePool.addHardware(builder, hardwareOffset);
  return GetHardwarePool.endGetHardwarePool(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class File {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns File
 */
__init(i:number, bb:flatbuffers.ByteBuffer):File {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param File= obj
 * @returns File
 */
static getRootAsFile(bb:flatbuffers.ByteBuffer, obj?:File):File {
  return (obj || new File).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
filename():string|null
filename(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
filename(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
packetnumber():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns boolean
 */
eof():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
dataArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFile(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset filenameOffset
 */
static addFilename(builder:flatbuffers.Builder, filenameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, filenameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number packetnumber
 */
static addPacketnumber(builder:flatbuffers.Builder, packetnumber:number) {
  builder.addFieldInt32(1, packetnumber, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean eof
 */
static addEof(builder:flatbuffers.Builder, eof:boolean) {
  builder.addFieldInt8(2, +eof, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFile(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createFile(builder:flatbuffers.Builder, filenameOffset:flatbuffers.Offset, packetnumber:number, eof:boolean, dataOffset:flatbuffers.Offset):flatbuffers.Offset {
  File.startFile(builder);
  File.addFilename(builder, filenameOffset);
  File.addPacketnumber(builder, packetnumber);
  File.addEof(builder, eof);
  File.addData(builder, dataOffset);
  return File.endFile(builder);
}
}
}
/**
 * @constructor
 */
export namespace schema{
export class Hardware {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Hardware
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Hardware {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Hardware= obj
 * @returns Hardware
 */
static getRootAsHardware(bb:flatbuffers.ByteBuffer, obj?:Hardware):Hardware {
  return (obj || new Hardware).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
cpu():string|null
cpu(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cpu(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
gpu():string|null
gpu(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gpu(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
os():string|null
os(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
os(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startHardware(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset cpuOffset
 */
static addCpu(builder:flatbuffers.Builder, cpuOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, cpuOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset gpuOffset
 */
static addGpu(builder:flatbuffers.Builder, gpuOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, gpuOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset osOffset
 */
static addOs(builder:flatbuffers.Builder, osOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, osOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHardware(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createHardware(builder:flatbuffers.Builder, cpuOffset:flatbuffers.Offset, gpuOffset:flatbuffers.Offset, osOffset:flatbuffers.Offset):flatbuffers.Offset {
  Hardware.startHardware(builder);
  Hardware.addCpu(builder, cpuOffset);
  Hardware.addGpu(builder, gpuOffset);
  Hardware.addOs(builder, osOffset);
  return Hardware.endHardware(builder);
}
}
}
