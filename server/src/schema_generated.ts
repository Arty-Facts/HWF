// automatically generated by the FlatBuffers compiler, do not modify


import * as flatbuffers from 'flatbuffers';
/**
 * @constructor
 */
export namespace HelloWorld{
export class HelloWorld {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns HelloWorld
 */
__init(i:number, bb:flatbuffers.ByteBuffer):HelloWorld {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param HelloWorld= obj
 * @returns HelloWorld
 */
static getRootAsHelloWorld(bb:flatbuffers.ByteBuffer, obj?:HelloWorld):HelloWorld {
  return (obj || new HelloWorld).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
msg():string|null
msg(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
msg(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startHelloWorld(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset msgOffset
 */
static addMsg(builder:flatbuffers.Builder, msgOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, msgOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHelloWorld(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishHelloWorldBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static createHelloWorld(builder:flatbuffers.Builder, msgOffset:flatbuffers.Offset):flatbuffers.Offset {
  HelloWorld.startHelloWorld(builder);
  HelloWorld.addMsg(builder, msgOffset);
  return HelloWorld.endHelloWorld(builder);
}
}
}
