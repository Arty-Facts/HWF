namespace schema;

union MessageBody {Task, GetResult, GetHardwarePool, File, Result, ResultList, Hardware}

table Message {
    type:int;
    body:MessageBody;
}

table Stage {
    name:string;
    data:[Data];
    cmd_list:[string];
    track_time:bool = true;
    track_ram:bool = false;
    track_cpu:bool = false;
    track_gpu:bool = false;
    comment:string;
}

table Data {
    path:string;
    filename:string;
}

table Task {
    hardware:Hardware;
    stages:[Stage]; 
    artifacts:[string];
}

table GetResult {
    id_list:[string];
}

table GetHardwarePool {
    hardware:[string];
    
}

table File {
    filename:string; 
    packetnumber:int; 
    eof:bool;
    data:[ubyte];
}

table Hardware {
    cpu:string;
    gpu:string;
    os:string;
    ram:string;
}

table ResultList {
    tasks:[Result];
}

table Result {
    time:int; 
    stages:[StageResult];
    artifacts:[Artifact];
    hardware:Hardware;
}

table StageResult {
    cmd:[CommandResult];
    name:string;
}

table CommandResult {
    cmd:string;
    exit:int;
    stdout:[ubyte];
    stderr:[ubyte];
    os:string;
    cpu:string;
    gpu:string;
    ram:string;
    time:int;
}

table Artifact {
    file_name:string;
    data:[ubyte];
}

root_type Message;
